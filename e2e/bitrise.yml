format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  test_java8:
    envs:
    - EXPECTED_VERSION: 8
    after_run:
    - _check_version
    steps:
    - script:
        title: Check if JDK version is available on stack
        inputs:
        - content: >
            #!/bin/bash
            set -ex
            if [[ "$BITRISEIO_STACK_ID" == osx-xcode-15.* ]] || [[ "$BITRISEIO_STACK_ID" == osx-xcode-14.* ]]; then
              VERSION_AVAILABLE=true
            else
                VERSION_AVAILABLE=false
            fi
            envman add --key VERSION_AVAILABLE --value "$VERSION_AVAILABLE"

    - path::./:
        title: Execute step
        run_if: >
          {{ enveq "VERSION_AVAILABLE" "true" }}
        inputs:
        - set_java_version: 8

  test_java11:
    envs:
    - EXPECTED_VERSION: 11
    after_run:
    - _check_version
    steps:
    - path::./:
        title: Execute step
        inputs:
        - set_java_version: 11

  test_java17:
    envs:
    - EXPECTED_VERSION: 17
    after_run:
    - _check_version
    steps:
    - path::./:
        title: Execute step
        inputs:
        - set_java_version: 17

  test_java21:
    envs:
    - EXPECTED_VERSION: 21
    after_run:
    - _check_version
    steps:
    - path::./:
        title: Execute step
        inputs:
        - set_java_version: 21

  _check_version:
    summary: Compares current JDK version to $EXPECTED_VERSION
    description: Based on https://stackoverflow.com/a/56243046
    steps:
    - script:
        title: Check `java -version`
        inputs:
        - content: |-
            set -ex
            VERSION=`java -version 2>&1 | head -1 | cut -d'"' -f2 | sed '/^1\./s///' | cut -d'.' -f1`

            if [[ $VERSION != $EXPECTED_VERSION ]]; then
              echo "Unexpected JDK version: $VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "JDK version is correct: $VERSION"
            fi
